# gradle/libs.versions.toml

[versions]
# Android Gradle Plugin, Kotlin, KSP, Serialization Plugin
agp = "8.10.1"
kotlin = "2.1.21" # Your new Kotlin version
ksp = "2.1.21-2.0.1" # Example KSP for Kotlin 1.9.23. For Kotlin 2.1.21, verify the compatible KSP version (e.g., it might be 2.1.21-1.0.xx or follow a new scheme)
kotlinSerializationPlugin = "2.1.21" # Usually matches Kotlin version
composeCompilerPlugin = "2.1.21" # For the new org.jetbrains.kotlin.plugin.compose, version usually matches Kotlin

# AndroidX & Compose
androidxCoreKtx = "1.16.0" # Example, check latest
androidxLifecycle = "2.9.1" # Example, check latest
androidxActivityCompose = "1.10.1" # Example, check latest
composeBom = "2025.06.00" # Example, check latest
androidxNavigationCompose = "2.9.0" # Example, check latest

# Kotlinx Libraries
kotlinxSerializationJson = "1.8.1" # Example, check latest
kotlinxCoroutines = "1.10.2" # Example, check latest

# Supabase & Ktor
# supabaseClient = "3.1.4" # Example, check latest
ktorClient = "3.1.3" # Example, check latest
supabaseBom = "3.1.4"

# Testing
junit = "4.13.2"
androidxTestExtJunit = "1.2.1"
androidxEspressoCore = "3.6.1"

[libraries]
# AndroidX Core & Lifecycle
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidxCoreKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" } # Often same version family as runtime

# In libs.versions.toml [libraries]
androidx-material-icons-core = { group = "androidx.compose.material", name = "material-icons-core" } # Version from BOM
androidx-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" } # Version from BOM

# Activity Compose
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidxActivityCompose" }

# Jetpack Compose (BOM and individual artifacts)
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" } # Version managed by BOM
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" } # Version managed by BOM
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" } # Version managed by BOM
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" } # Version managed by BOM
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "androidxNavigationCompose" }

# Kotlinx Serialization
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

# Supabase Kotlin Client (using BOM) - THIS IS THE CORRECTED SECTION
supabase-bom = { group = "io.github.jan-tennert.supabase", name = "bom", version.ref = "supabaseBom" } # Use the supabaseBom version reference
supabase-auth = { group = "io.github.jan-tennert.supabase", name = "auth-kt" }     # No version needed here, BOM handles it
supabase-postgrest = { group = "io.github.jan-tennert.supabase", name = "postgrest-kt" }
supabase-storage = { group = "io.github.jan-tennert.supabase", name = "storage-kt" }
supabase-realtime = { group = "io.github.jan-tennert.supabase", name = "realtime-kt" }

# ... other libraries like Ktor, Testing, etc. ...

# Ktor Client
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktorClient" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version = "3.1.3" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktorClient" }

# Kotlinx Coroutines
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidxTestExtJunit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidxEspressoCore" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" } # Version managed by BOM
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" } # Version managed by BOM
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" } # Version managed by BOM

# Add these for Material Icons if not already present and you want them defined here
# androidx-material-icons-core = { group = "androidx.compose.material", name = "material-icons-core" } # Version from composeBom
# androidx-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" } # Version from composeBom


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinSerializationPlugin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "composeCompilerPlugin" } # New Compose Compiler plugin

# [bundles]
# You can optionally create bundles of libraries, e.g.:
# supabase = ["supabase-postgrest", "supabase-auth-kt", "supabase-storage", "supabase-realtime"]
# ktor = ["ktor-client-android", "ktor-client-content-negotiation", "ktor-serialization-kotlinx-json"]